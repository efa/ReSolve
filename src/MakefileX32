# Makefile to crosscompile 'reSolve' from Linux to Win32
# Linux=>Win32

HOST=$(shell uname -o)
PKG=Win
BITS=32

BUILD?=release
ifeq ($(BUILD),debug)
   COPT=-O1 -g -fsanitize=address -fno-omit-frame-pointer
   LOPT=-fsanitize=address
else
   COPT=-O3
endif

CC=i686-w64-mingw32-gcc # Cross-compile to Win32 (package mingw-w64)
CC=/opt/mxe/usr/bin/i686-w64-mingw32.static-gcc # Cross-compile to Win32 (package MXE)
CFLAGS=-std=gnu11 -Wall $(COPT) -D__USE_MINGW_ANSI_STDIO=1
PKGCONFIG=/opt/mxe/usr/bin/i686-w64-mingw32.static-pkg-config
PKG_CONFIG_LIBDIR=/opt/mxe/usr/i686-w64-mingw32.static/lib/pkgconfig
GFLAGS=`$(PKGCONFIG) --cflags --libs gtk+-3.0`
LDFLAGS=$(LOPT) -lm
TARGET=reSolve$(PKG)$(BITS).exe
GUI=reSolveGui$(PKG)$(BITS).exe

all: $(TARGET) $(GUI)
	@rm -f *.gch

$(GUI): fileIo.o exprParser.o reSolveLib.o reSolveGui.o
	$(CC) $(CFLAGS) $^ $(LDFLAGS) $(GFLAGS) -o $@

$(TARGET): fileIo.o exprParser.o reSolveLib.o reSolveCli.o
	$(CC) $(CFLAGS) $^ $(LDFLAGS) -o $@

fileIo.o: comType.h fileIo.h fileIo.c

exprParser.o: exprParser.h exprParser.c

reSolveLib.o: comType.h fileIo.h exprParser.h reSolveLib.h reSolveLib.c

reSolveCli.o: comType.h fileIo.h exprParser.h reSolveLib.h reSolveCli.c

reSolveGui.o: comType.h fileIo.h exprParser.h reSolveLib.h reSolveGui.c
	$(CC) $(CFLAGS) -c $^ $(GFLAGS)

strip:
	strip $(TARGET) $(GUI)

cleanobj:
	rm -f *.o
	@rm -f *.gch

cleanbin:
	rm -f $(TARGET) $(GUI)

clean:
	rm -f *.o $(TARGET) $(GUI)

debug: cleanobj all cleanobj

bin: all cleanobj strip

force: clean bin
	rm -f *.o

rel: force
	mv $(TARGET) $(GUI) ..

pkg: rel
	@makeAppDir.sh $(PKG) $(BITS)
